; Copyright 1998 Lars T Hansen.            -*- Scheme -*-
;
; $Id: mprocs.cfg 2543 2005-07-20 21:54:03Z pnkfelix $
;
; Config file for millicode support procedure offsets into the global Scheme
; vector "millicode-support".
; See also: Lib/Common/mcode.sch (there's a strong mutual dependency between 
; these two files, because of the hard-coded indices).

(define-files "mprocs.ch" "mprocs.ah" #f)

(define-action assembly (lambda (x) (* x 4)))

(define-const scheme2scheme-helper 0 "MS_SCHEME2SCHEME" "MS_SCHEME2SCHEME" #f)
(define-const undefined-global     1 "MS_UNDEF_GLOBAL" "MS_UNDEF_GLOBAL" #f) ; obsolete
(define-const generic-exception    2 "MS_EXCEPTION_HANDLER" "MS_EXCEPTION_HANDLER" #f)

(define-const bignum-add       10 "MS_BIGNUM_ADD" "MS_BIGNUM_ADD" #f)
(define-const bignum-sub       11 "MS_BIGNUM_SUB" "MS_BIGNUM_SUB" #f)
(define-const bignum-mul       12 "MS_BIGNUM_MUL" "MS_BIGNUM_MUL" #f)
(define-const bignum-div       13 "MS_BIGNUM_DIV" "MS_BIGNUM_DIV" #f)
(define-const bignum-negate    14 "MS_BIGNUM_NEGATE" "MS_BIGNUM_NEGATE" #f)
(define-const bignum-abs       15 "MS_BIGNUM_ABS" "MS_BIGNUM_ABS" #f)
(define-const bignum-equal     16 "MS_BIGNUM_EQUAL" "MS_BIGNUM_EQUAL" #f)
(define-const bignum-less      17 "MS_BIGNUM_LESS" "MS_BIGNUM_LESS" #f)
(define-const bignum-lesseq    18 "MS_BIGNUM_LESSEQ" "MS_BIGNUM_LESSEQ" #f)
(define-const bignum-greater   19 "MS_BIGNUM_GREATER" "MS_BIGNUM_GREATER" #f)
(define-const bignum-greatereq 20 "MS_BIGNUM_GREATEREQ" "MS_BIGNUM_GREATEREQ" #f)

(define-const ratnum-add       30 "MS_RATNUM_ADD" "MS_RATNUM_ADD" #f)
(define-const ratnum-sub       31 "MS_RATNUM_SUB" "MS_RATNUM_SUB" #f)
(define-const ratnum-mul       32 "MS_RATNUM_MUL" "MS_RATNUM_MUL" #f)
(define-const ratnum-div       33 "MS_RATNUM_DIV" "MS_RATNUM_DIV" #f)
(define-const ratnum-negate    34 "MS_RATNUM_NEGATE" "MS_RATNUM_NEGATE" #f)
(define-const ratnum-abs       35 "MS_RATNUM_ABS" "MS_RATNUM_ABS" #f)
(define-const ratnum-equal     36 "MS_RATNUM_EQUAL" "MS_RATNUM_EQUAL" #f)
(define-const ratnum-less      37 "MS_RATNUM_LESS" "MS_RATNUM_LESS" #f)
(define-const ratnum-lesseq    38 "MS_RATNUM_LESSEQ" "MS_RATNUM_LESSEQ" #f)
(define-const ratnum-greater   39 "MS_RATNUM_GREATER" "MS_RATNUM_GREATER" #f)
(define-const ratnum-greatereq 40 "MS_RATNUM_GREATEREQ" "MS_RATNUM_GREATEREQ" #f)
(define-const ratnum-round     41 "MS_RATNUM_ROUND" "MS_RATNUM_ROUND" #f)
(define-const ratnum-truncate  42 "MS_RATNUM_TRUNCATE" "MS_RATNUM_TRUNCATE" #f)

(define-const rectnum-add      50 "MS_RECTNUM_ADD" "MS_RECTNUM_ADD" #f)
(define-const rectnum-sub      51 "MS_RECTNUM_SUB" "MS_RECTNUM_SUB" #f)
(define-const rectnum-mul      52 "MS_RECTNUM_MUL" "MS_RECTNUM_MUL" #f)
(define-const rectnum-div      53 "MS_RECTNUM_DIV" "MS_RECTNUM_DIV" #f)
(define-const rectnum-negate   54 "MS_RECTNUM_NEGATE" "MS_RECTNUM_NEGATE" #f)
(define-const rectnum-equal    55 "MS_RECTNUM_EQUAL" "MS_RECTNUM_EQUAL" #f)

(define-const generic-add       70 "MS_GENERIC_ADD" "MS_GENERIC_ADD" #f)
(define-const generic-sub       71 "MS_GENERIC_SUB" "MS_GENERIC_SUB" #f)
(define-const generic-mul       72 "MS_GENERIC_MUL" "MS_GENERIC_MUL" #f)
(define-const generic-div       73 "MS_GENERIC_DIV" "MS_GENERIC_DIV" #f)
(define-const fixnum2ratnum-div 74 "MS_FIXNUM2RATNUM_DIV" "MS_FIXNUM2RATNUM_DIV" #f)
(define-const heavy-quotient    75 "MS_HEAVY_QUOTIENT" "MS_HEAVY_QUOTIENT" #f)
(define-const heavy-remainder   76 "MS_HEAVY_REMAINDER" "MS_HEAVY_REMAINDER" #f)
(define-const heavy-modulo      77 "MS_HEAVY_MODULO" "MS_HEAVY_MODULO" #f)
(define-const generic-equal     78 "MS_GENERIC_EQUAL" "MS_GENERIC_EQUAL" #f)
(define-const generic-less      79 "MS_GENERIC_LESS" "MS_GENERIC_LESS" #f)
(define-const generic-lesseq    80 "MS_GENERIC_LESSEQ" "MS_GENERIC_LESSEQ" #f)
(define-const generic-greater   81 "MS_GENERIC_GREATER" "MS_GENERIC_GREATER" #f)
(define-const generic-greatereq 82 "MS_GENERIC_GREATEREQ" "MS_GENERIC_GREATEREQ" #f)
(define-const contagion         83 "MS_CONTAGION" "MS_CONTAGION" #f) 
(define-const pcontagion        84 "MS_PCONTAGION" "MS_PCONTAGION" #f)
(define-const econtagion        85 "MS_ECONTAGION" "MS_ECONTAGION" #f)

(define-const generic-make-rectangular 90 "MS_GENERIC_MAKE_RECTANGULAR" "MS_GENERIC_MAKE_RECTANGULAR" #f)
(define-const generic-inexact->exact   91 "MS_GENERIC_INEXACT2EXACT" "MS_GENERIC_INEXACT2EXACT" #f)
(define-const generic-exact->inexact   92 "MS_GENERIC_EXACT2INEXACT" "MS_GENERIC_EXACT2INEXACT" #f)

; eof
